/* 
Alpha Channel
-------------
    - wkt, there are 3 channels r, g, b [ranging from 0 → 255]
    - There is one additional channel called Alpha Channel
        - It sets the Opacity for a color & ranges from 0 [hidden] → 1 [visible]
        - ex: rgba (255, 255, 255. 0.8) (or) #ffffffa5

Opacity
-------
    - Sets the opacity of an element & ranges from 0 → 1
    - It will give opacity to all the elements present within it Not just the color
*/
div {
    height: 200px;
    width: 200px;
    background-color: rgba(255, 0, 0, 0.8);
    margin: 50px auto;
}
#opacity {
    opacity: 0.288;
}


/* 
HSL(A)
-----
An HSL color value is specified with: hsl(hue, saturation, lightness).
An HSLA color value is specified with: hsla(hue, saturation, lightness, alpha)
    1. Hue is a degree on the color wheel (from 0 to 360):
        - 0 (or 360) is red
        - 120 is green
        - 240 is blue
    2. Saturation is a percentage value: 100% is the full color.
    3. Lightness is also a percentage; 0% is dark (black) and 100% is white.
*/



/* 
CSS Transitions
---------------
- It defines the Transistion between 2 states of an element
- It gives smooth animation effect to the trasition

There are shorthand for this property
    - `property`→ defines on which property to be applied this transition
    - `duration` → defines the duration of the transistion effect
    - `timing-function` → defines the animation 
            → linear || ease || ease-in || ease-out || ease-in-out || cubic
    - `delay` → defines the delay in transistion effect
    ex: `transition: margin-top 1s ease-in-out .2s;`
*/
div#Effect {
    width: 100px;
    height: 100px;
    background: red;
    transition: width 2s, height 2s, transform 2s;
  }
  
  div:hover {
    width: 300px;
    height: 300px;
    transform: rotate(180deg);
  }


  /* 
 CSS Transform
--------------
    - This property lets you rotate, scale, skew & translate an element
*/
section div {
    height: 50px;
    width: 200px;
    background-color: cadetblue;
    text-align: center;
    border: 2px solid black;
    margin: 10px auto;
}
section div:nth-of-type(2n) {
    background-color: chocolate;
}
section div:nth-of-type(3n) {
    background-color: green;
}

#one {
    transform: rotate(45deg);
    /* 
        We can also use -45deg to rotate in anti-clockwise direction
        We can also give values in terms of radians
    */
}
#two {
    transform: scale(2, 1.5);
    /* 
        We can also scale individually like 
            scaleX(2) || scaleY(2) || scale(2) -> scales across both axis
    */
}
#three {
    transform: translate(-100px, -100px);
    /* 
        This property will behave simillar to scale
    */
}
#four {
    transform: skew(30deg);
    /* 
        It makes the rectangle, a parrallellogram
        if skew(90deg) -> rec will disappear
    */
}
#five {
    transform: rotate(-30deg) translateX(-100px);
    /* 
        In this way we can combine them
				But some times order should be checked
    */
}


/* 
Box Shadow
----------
- It adds shadow effects around an element’s frame
- It gives 3D effect to the element
- `box-shadow: Xoffset Yoffset blur spread color inlet`
    - The `color` parameter defines the color of the shadow. 
            - [ The default color of the shadow is the current text-color ]
    - The `blur` parameter defines the blur radius
    - The `spread` parameter defines the spread radius. 
            - [ +ve value increases the size of the shadow, & -ve value decreases ]
    - The `inset` changes the shadow from an outer shadow (outset) to an inner shadow.
- An element can also have multiple shadows:
*/
#shadow {
    height: 50px;
    width: 200px;
    background-color: cadetblue;
    box-shadow: -5px 5px 5px black; /* x y blur color */
}


/* 
NOTE:
----
- When using multiple transition properties " , " is Used 
        → transition: width 2s, height 2s, transform 2s;
- Similarly, When using multiple box-shadow propeties " , " is Used 
        → box-shadow: 5px 5px blue, 10px 10px red, 15px 15px green;

- But When using multiple transform properties " , " is NOT used 
        → transform: rotate(-30deg) translateX(-100px);
*/